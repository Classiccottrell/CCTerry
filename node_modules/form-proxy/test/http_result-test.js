/*jslint node: true */
/*global describe, it */
"use strict";

var assert = require('assert');
var httpResult = require('../lib/http_result');

describe('httpResult', function() {

	it('should return success by default', function() {
		var result = httpResult();
		assert.equal(result.code, 200);
		assert.equal(result.body.status, "success");
	});

	it('should return failed when status 400 is used', function() {
		var result = httpResult(400);
		assert.equal(result.code, 400);
		assert.equal(result.body.status, "failed");

		result = httpResult(403);
		assert.equal(result.code, 403);
		assert.equal(result.body.status, "failed");
	});

	it('should set description to internal error when 500 is passed', function() {
		var result = httpResult(500);
		assert.equal(result.code, 500);
		assert.equal(result.body.status, "failed");
		assert.equal(result.body.description, "Internal error");
	});

	it('should use the status when passed by argument', function() {
		var result = httpResult(300, { 'status' : 'not sure' });
		assert.equal(result.body.status, "not sure");
	});

});